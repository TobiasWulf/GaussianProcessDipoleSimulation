%% TDK TAS2141 Characterization
% TDK characterization as base of the sensor array simulation was done before
% the dataset is just modified in its structure and not in its values. An
% additional info struct is added which contains information about how the
% dataset was aquirred and a data struct which contains the magnetic field
% resolution and the cosinus and sinus bridge images for variable Hx and Hy
% fieldstrengths. The raw dataset was aquirred after the method Thorben Schüthe
% describe in his IEEE paper for two-dimensional characterization of TMR angular
% sensors. The sensor characterized for both bridges a cosinus and sinus
% bridge. The bridges have a phisically phase shift of 90° so the sensor as able
% to reference a superimposed magnetic field flud in x- and y-direction. The
% field was generated by an cross coil setup.
%
%
%% See Also
% * <https://ieeexplore.ieee.org/document/8706125 Two-Dimensional Characterization and Simplified Simulation Procedure for Tunnel Magnetoresistive Angle Sensors>
%
%
%% Magnetic Stimulus
% The right stimulus is the keynote for characterization records. It needs to
% have the abillity record slow enough for quasi static recordings but is not
% allowed to be real static so the magnetic field is not interrupted during the
% recording. Therefore slow sinoid carrier functions with even slower amplitude
% modulation is choosen to provide a quasi static stimulus. 
%
% The carrier function for the Hx-field stimulus is related to the cosinus
% bridge and so:
%
% $c_1(t) = cos(\phi(t))$
%
% Due to the physically phase shift the Hy-field stimulus is related to sinus:
%
% $c_2(t) = sin(\phi(t))$
%
% Both carrier runs with same carrier frequency:
%
% $f_c = 3.2 Hz$
%
% so they are executed with the phase vector over time:
%
% $\phi(t) = 2\pi f_c t$
%
% The carrier functions are triangle modulated to generate rising and falling
% amplituded. The modulation frequency is  set to:
%
% $f_m = 0.01Hz$
%
% Which generates a stimulus with 320 periods where 160 periods feeds a rising
% and falling record each multiplied with maximum fieldstrength amplitude:
%
% $m(t) = H_{max} \cdot tri(t) = H_{max} \cdot tri(2(t-t_0)f_m)$
%
% $t_0 = \frac{1}{2f_m}$
% 
% So the Hx- and Hy-field stimulus is described by:
%
% $H_x(t) = m(t) \cdot c_1(t)$
%
% $H_y(t) = m(t) \cdot c_1(t)$
%
% The stimulus amplitude depending on the phase in polar coordinates can be
% displayed for both parts by:
%
% $H_{x,y}(\phi) = |H_{x,y}(\phi)| \cdot e^{j\phi} = m(t) \cdot e^{j\phi(t)}$
%
% Where a rising spiral runs from center outwards for:
%
% $0 < t < t_0$
%
% And a falling spiral of amplitudes from outwards to center for:
%
% $t_0 < t < \frac{1}{f_m}$
%
% <html>
% <img src="images/tdk_magnetic_stimulus.svg" height=650>
% </html>
%
%
%% Cosinuns Bridge Output
% The record characterization raw data are one dimensional time discrete
% vecotrs. To fieldstrength images like down below the recorded data must
% be referenced backwords to driven stimulus of Hx- and Hy-direction. But
% at first the image size of must be determined. Here fix size is set to
% 256px for each direction. So it spans a vector for Hx- and Hy-direction
% from minimum -25kA/m to maximum 25kA/m in 256 steps with a resolution of
% 0.1961kA/m. So it results into a 256x256 image. Now it runs for each
% point on the Hx- and Hy-axes and get the record index of the stimulus as
% backreference to the recorded bridge signal and sets the pixel. 
% That runs for the rising modulation amplitude and falling amplitude until
% every pixel is hit and ended up into a dimensional function image as:
%
% $V_{cos}(H_x, H_y) = [mV]$
% 
% The information of the image is build up in row. Reference Hx for
% constant Hy in each row. The method is also comparable to a
% historgram of Hx matches in the recorded sensor signal for one constant
% Hy and so on next historgram append on the next row for the next Hy.
%
% <html>
% <img src="images/tdk_cosinus_bridge.svg" height=650>
% </html>
%
%
%% Sinus Bridge Output
% The sinus characterization field is build up similar to the cosinus
% images but the information lays now in the columns so the data is
% collected in each column for a constant Hx and variable Hy:
%
% $V_{sin}(H_x, H_y) = [mV]$
%
% <html>
% <img src="images/tdk_sinus_bridge.svg" height=650>
% </html>
%
%
%% Dataset Structure
% The dataset is parted in two main structs. The first one is filled with
% meta data. So it represents the file header. The struct is called Info
% and contains information about how the dataset is aquirred. So the
% stimulus is reconstructable from that meta data.
%
% *Info:*
%
% * Created - string, contains dataset creation date
% * Creator - string, contains dataset creator
% * Edited - string, contains last time edited date
% * Editor - string, contains last time editor
% * Senor - string, sensor identification name e.g. TAS2141
% * SensorType - string, kind of sensor e.g. Angular
% * SensorTechnology - string, bridge technology e.g. AMR, GMR, TMR
% * SensorManufacturer - string, producer or supplier e.g. NXP, TDK
% * *MagneticField* - struct, contains further information about Hx and Hy
% * *SensorOutput* - struct, contains information about sensor produced
%   output and gathered image information
% * *Units* - struct, contains information about used si units in dataset
%
% *MagneticField:*
%
% * Modulation - string, contains modulation equivalent Matlab function
% * ModulationFrequency - double, contains frequeny of modulation in Hz
% * CarrierFrequency - double, carrier frequency for both Hx and Hy carrier
%   in Hz
% * MaxAmplitude - double, maximum Hx and Hy field amplitude in kA/m
% * MinAmplitude - double, minimum Hx and Hy field amplitude in kA/m
% * Steps - double, Hx- and Hy-field steps to build characterization images
% * Resolution - double, resolution of one step in kA/m
% * CarrierHx - string, contains Hx carrier equivalent Matlab function
% * CarrierHy - string, contains Hy carrier equivalent Matlab function
%
% *SensorOutput:*
%
% * *CosinusBridge* - struct, contains further information about sensor
%   cosinus bridge outpus
% * *SinusBridge* - struct, contains further information about sensor sinus
%   bridge outputs
%
% *CosinusBridge/ SinusBridge:*
%
% * xDimension - double, image size in x-direction
% * yDimension - double, image size in y-direction
% * xDirection - string, x-axis label
% * yDirection - string, y-axis label
% * Orientation - string, orientation of varying data, row or column
% * Determination - cell, images in data {"Rise", "Fall", "All", "Diff"}
%
% *Units:*
%
% * MagneticFieldStrength - string, kA/m
% * Frequency - string, Hz
% * SensorOutputVoltage - string, mV
%
%
% Created on October 27. 2020 Tobias Wulf. Copyright Tobias Wulf 2020.
%
% <html>
% <!--
% Hidden Clutter.
% Edited on Month DD. YYYY by Editor: Single line description.
% Edited on October 28. 2020 by Tobias Wulf: Add description for bridges.
% -->
% </html>
